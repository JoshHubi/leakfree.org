<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Sketchup to SDK Hammer pipeline</title>
    <link>https://leakfree.org/t/sketchup-to-sdk-hammer-pipeline/9004</link>
    <description>Has anyone heard of the Sketchup plugin called Playup?  It exports Sketchup models into game engines, including Cryengine, Unity, and last but not least Hammer.  Because I&#39;m quite good with Sketchup but can&#39;t seem to learn 3ds max or other modeling applications, this seems like a good choice.  Trying it out, though, I keep getting errors when importing into Hammer (Cryengine worked fine).  Anyone with experience with this plugin at all?  Or, if not, feel free to discuss how you yourself get models into Hammer; I&#39;d love to learn.</description>
    
    <lastBuildDate>Sat, 07 Jul 2012 13:52:38 +0000</lastBuildDate>
    <category>Help and Support</category>
    <atom:link href="https://leakfree.org/t/sketchup-to-sdk-hammer-pipeline/9004.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Sketchup to SDK Hammer pipeline</title>
        <dc:creator><![CDATA[Gasher]]></dc:creator>
        <description><![CDATA[
            <p>If Playup ends up not working for you, you can always try the OBJ exporter for Sketchup and bring those into Blender and go from there. I’m pretty sure Blender can export almost anything. Having accuTrans installed (another free app) can come in handy too.</p>
<p>I am a Lightwave/ZBrush guy myself, but I have played with Blender some and know that it can be a good mediator between point A and point B. Another thing bro(s); don’t be afraid to open OBJ, Collada and FBX model files in a text editor like Notepad++ (highly recommended). They are all readable by humans and can give you some insight to what is going on with your models. There have actually been occasions that I <span class="bbcode-i">needed</span> to edit OBJ files in Notepad++, to change from absolute paths to relative paths of textures for WebGL stuff… so there you go. I guess what I am trying to say is that getting your models into OBJ first can be quite helpful, if only because you can actually read and edit them in text editors. And all of the major 3D apps support OBJ. It is actually the format of choice between ZBrush and other apps. OBJs (Wavefront Object) kick ass! Good luck.</p>
<p>EDIT: Okay, I took a couple minutes and did some leg-work for you. Blender has a SMD exporter, which will allow you to take your models (it appears to compile them too during export) from Blender right into Hammer.</p>
<p><a href="https://developer.valvesoftware.com/wiki/Blender#Plugins" data-bbcode="true" rel="nofollow noopener">https://developer.valvesoftware.com/wiki/Blender#Plugins</a></p>
<p><a href="https://developer.valvesoftware.com/wiki/Blender_SMD_Tools" data-bbcode="true" rel="nofollow noopener">https://developer.valvesoftware.com/wiki/Blender_SMD_Tools</a></p>
<p>So one option for you is: Sketchup &gt; OBJ &gt; Blender &gt; SMD &gt; Hammer</p>
<p>Here is the free OBJ export plug for Sketchup I use (I think you need to sign up to download):<br>
<a href="https://forums.sketchucation.com/viewtopic.php?t=33448" data-bbcode="true" rel="nofollow noopener">https://forums.sketchucation.com/viewtopic.php?t=33448</a></p>
<p>There are a couple commercial OBJ export plugs, I believe, but TIG’s works great… again, good luck bro!</p>
          <p><a href="https://leakfree.org/t/sketchup-to-sdk-hammer-pipeline/9004/3">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/sketchup-to-sdk-hammer-pipeline/9004/3</link>
        <pubDate>Sat, 07 Jul 2012 13:52:38 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-9004-3</guid>
        <source url="https://leakfree.org/t/sketchup-to-sdk-hammer-pipeline/9004.rss">Sketchup to SDK Hammer pipeline</source>
      </item>
      <item>
        <title>Sketchup to SDK Hammer pipeline</title>
        <dc:creator><![CDATA[sersoft]]></dc:creator>
        <description><![CDATA[
            <p>Noone here will recommend doing that, the automatically generated brush surfaces would be unoptimized as hell, unless the program knows how to optimize maps for Hammer, which I highly doubt.</p>
<p>edit: I looked at some videos and it doesn’t look too terrible, but it’s always better to use the intended editor for best results.</p>
          <p><a href="https://leakfree.org/t/sketchup-to-sdk-hammer-pipeline/9004/2">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/sketchup-to-sdk-hammer-pipeline/9004/2</link>
        <pubDate>Sat, 07 Jul 2012 03:10:35 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-9004-2</guid>
        <source url="https://leakfree.org/t/sketchup-to-sdk-hammer-pipeline/9004.rss">Sketchup to SDK Hammer pipeline</source>
      </item>
      <item>
        <title>Sketchup to SDK Hammer pipeline</title>
        <dc:creator><![CDATA[Combine]]></dc:creator>
        <description><![CDATA[
            <p>Has anyone heard of the Sketchup plugin called Playup?  It exports Sketchup models into game engines, including Cryengine, Unity, and last but not least Hammer.  Because I’m quite good with Sketchup but can’t seem to learn 3ds max or other modeling applications, this seems like a good choice.  Trying it out, though, I keep getting errors when importing into Hammer (Cryengine worked fine).  Anyone with experience with this plugin at all?  Or, if not, feel free to discuss how you yourself get models into Hammer; I’d love to learn.</p>
          <p><a href="https://leakfree.org/t/sketchup-to-sdk-hammer-pipeline/9004/1">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/sketchup-to-sdk-hammer-pipeline/9004/1</link>
        <pubDate>Fri, 06 Jul 2012 21:42:50 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-9004-1</guid>
        <source url="https://leakfree.org/t/sketchup-to-sdk-hammer-pipeline/9004.rss">Sketchup to SDK Hammer pipeline</source>
      </item>
  </channel>
</rss>
