<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>C++/Programming thread</title>
    <link>https://leakfree.org/t/c-programming-thread/6438</link>
    <description>For a project, i&#39;m creating ConnectFour (4 in a row i think its called in the states) and i&#39;ve kind of hit a wall, i&#39;ve got my main menu, my grid built up using arrays, but i&#39;m not acctually sure how to acctually get the user to play the game.

For example how do i update the grid when the user takes there turn? 

Also, i&#39;d like to clear the menu away from the screen once the user has made their choice. 

Code: 
[quote]
#include &quot;stdafx.h&quot;
#include &lt;iostream&gt;

using namespace std;
int menu();
int grid();
int highscore();
int exit();

int main()
{
	menu();
	
}

int menu()
{

	int user_option;
	
	cout&lt;&lt;&quot;											Welcome to ConnectFour! This is the main menu! Enter the option of your choice to continue!&quot;;
	cout&lt;&lt;endl;
	cout&lt;&lt;&quot;1. Start new game!&quot;;
	cout&lt;&lt;endl;
	cout&lt;&lt;&quot;2. View high scores&quot;;
	cout&lt;&lt;endl;
	cout&lt;&lt;&quot;3. Exit game and return to desktop&quot;;
	cout&lt;&lt;endl;
	cout&lt;&lt;endl;
	cout&lt;&lt;&quot;Please enter your choice: &quot;;

	cin&gt;&gt;user_option;

	if (user_option == 1)
		{
			grid();
		}
	
	if (user_option == 2)
	{
		highscore();
	}

	if (user_option == 3)
	{
		exit();
	}

	return 0;
}

int grid()

	{
	int i;
	char columnarray1[7]={&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;};
	char columnarray2[7]={&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;};
	char columnarray3[7]={&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;};
	char columnarray4[7]={&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;};
	char columnarray5[7]={&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;};
	char columnarray6[7]={&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;};
	char columnarray7[7]={&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;,&#39;&quot;&#39;};

	cout&lt;&lt;&quot;           ConnectFour&quot;&lt;&lt;endl;

	for(i=0; i&lt;7; i++)
	{
		cout&lt;&lt;&quot;|  &quot;&lt;&lt;columnarray1[i]&lt;&lt;&quot;   |  &quot;&lt;&lt;columnarray2[i]&lt;&lt;&quot;   |  &quot;&lt;&lt;columnarray3[i]&lt;&lt;&quot;   |  &quot;&lt;&lt;columnarray4[i]&lt;&lt;&quot;   |  &quot;&lt;&lt;columnarray5[i]&lt;&lt;&quot;   |  &quot;&lt;&lt;columnarray6[i]&lt;&lt;&quot;   |  &quot;&lt;&lt;columnarray7[i]&lt;&lt;&quot;   | \n -------------------------------------------------&quot;&lt;&lt;endl;
	}
	cout&lt;&lt;&quot;|  1   |  2   |  3   |  4   |  5   |  6   |  7   |&quot;&lt;&lt;endl&lt;&lt;endl&lt;&lt;&quot;Player 1 = X  ||  Player 2 = O  ||  Empty Slot = \&quot;&quot;&lt;&lt;endl;

	return 0;
}

int highscore()
{
	return 0;
}

int exit()
{
	return 0;
}
[/quote]
high score is empty because i haven&#39;t gotten round to doing that yet, and exit is a function as far as i&#39;m aware, but not sure if i&#39;ve implamented it right,

If anyone has any adive or tips on how to do any of that, it&#39;d be great. 

: )</description>
    
    <lastBuildDate>Thu, 17 Feb 2011 16:07:12 +0000</lastBuildDate>
    <category>Technology and Gaming</category>
    <atom:link href="https://leakfree.org/t/c-programming-thread/6438.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[Paddy]]></dc:creator>
        <description><![CDATA[
            <p>ohhh! Now i get it it! : D</p>
<p>Thanks!</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/50">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/50</link>
        <pubDate>Thu, 17 Feb 2011 16:07:12 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-50</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[JamesKane]]></dc:creator>
        <description><![CDATA[
            <p>Next time use pastebin as it formats the code ;D</p>
<p>To see if you have a solution check the last cell and what is around it. Only count the cells which are the same type and stop counting if not or empty. Since we are assuming the middle cell is accurate and only counting the sides then we only need to find 3 other like cells.</p>
<p>For example, count left and right then add the two up. So, If the count &gt;= 3 then the player has won. Now do this for up/down and the diagonals.</p>
<p>You can keep a sorted vector or some other sorted container which holds the winning players name and score. So when you want to display it just loop through the sorted vector.</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/49">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/49</link>
        <pubDate>Wed, 16 Feb 2011 16:21:10 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-49</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[Paddy]]></dc:creator>
        <description><![CDATA[
            <p>I looked at my player move function, all the if statements and nearly died, so i redid it,</p>
<p><img src="https://leakfree.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji only-emoji" alt=":slight_smile:"></p>
<aside class="quote no-group">
<blockquote>
<p>// ConnectFour.cpp : Defines the entry point for the console application.<br>
//</p>
<p><span class="hashtag">#include</span> “stdafx.h”<br>
<span class="hashtag">#include</span> <br>
<span class="hashtag">#include</span> &lt;stdlib.h&gt;</p>
<p>using namespace std;<br>
int menu();<br>
int grid();<br>
int highscore();<br>
int exit();<br>
int player = 1;<br>
int playGame();<br>
int playerMove();<br>
int columnChosen;<br>
int user_option;</p>
<p>int playerMarker=0;</p>
<p>char columnarray[7][7]={<br>
{’"’,’"’,’"’,’"’,’"’,’"’,’"’},<br>
{’"’,’"’,’"’,’"’,’"’,’"’,’"’},<br>
{’"’,’"’,’"’,’"’,’"’,’"’,’"’},<br>
{’"’,’"’,’"’,’"’,’"’,’"’,’"’},<br>
{’"’,’"’,’"’,’"’,’"’,’"’,’"’},<br>
{’"’,’"’,’"’,’"’,’"’,’"’,’"’},<br>
{’"’,’"’,’"’,’"’,’"’,’"’,’"’}};</p>
<p>void clearScreen()<br>
{<br>
system(“cls”);<br>
}</p>
<p>int menu()<br>
{</p>
<pre><code>cout&lt;&lt;"				Welcome to connectFour!";
cout&lt;&lt;endl;
cout&lt;&lt;endl;
cout&lt;&lt;"This is the main menu! Enter the option of your choice to continue!";
cout&lt;&lt;endl;
cout&lt;&lt;endl;
cout&lt;&lt;"1. Start new game!";
cout&lt;&lt;endl;
cout&lt;&lt;"2. View high scores";
cout&lt;&lt;endl;
cout&lt;&lt;"3. Exit game and return to desktop";
cout&lt;&lt;endl;
cout&lt;&lt;endl;
cout&lt;&lt;"Please enter your choice: ";


cin&gt;&gt;user_option;



return 0;
</code></pre>
<p>}</p>
<p>int grid()</p>
<p>{<br>
clearScreen();<br>
int i;</p>
<pre><code>cout&lt;&lt;"					ConnectFour"&lt;&lt;endl; 
cout&lt;&lt;endl;
for(i=0; i&lt;7; i++)
{
	cout&lt;&lt;"|  "&lt;&lt;columnarray[0][i]&lt;&lt;"   |  "&lt;&lt;columnarray[1][i]&lt;&lt;"   |  "&lt;&lt;columnarray[2][i]&lt;&lt;"   |  "&lt;&lt;columnarray[3][i]&lt;&lt;"   |  "&lt;&lt;columnarray[4][i]&lt;&lt;"   |  "&lt;&lt;columnarray[5][i]&lt;&lt;"   |  "&lt;&lt;columnarray[6][i]&lt;&lt;"   | \n -------------------------------------------------"&lt;&lt;endl;
}
cout&lt;&lt;"|  0   |  1   |  2   |  3   |  4   |  5   |  6   |"&lt;&lt;endl&lt;&lt;endl&lt;&lt;"Player 1 = *  ||  Player 2 = O  ||  Empty Slot = \""&lt;&lt;endl;

return 0;
</code></pre>
<p>}</p>
<p>int playerMove()<br>
{</p>
<pre><code>if (playerMarker % 2 == 0)
{
	player = 1;
}
else
{
	player = 2;
}

cout&lt;&lt;"Please choose where you would like to drop your counter. ";

cin&gt;&gt;columnChosen;
int i;

for(i=6;i&gt;=0;i--)
{
	if (columnarray[columnChosen][i]=='"')
	{
		if ( player == 1 )
		{
			columnarray[columnChosen][i] = '*';
		}
		else
		{
			columnarray[columnChosen][i] = 'O';
		}
		i=-1;

	}
}

return 0;
}	
</code></pre>
<p>int highscore()<br>
{<br>
clearScreen();<br>
cout&lt;&lt;“Press 1 to view high score lists, press 2 to add highscores. “;<br>
cout&lt;&lt;”_____________________________________________________________”;</p>
<pre><code>return 0;
</code></pre>
<p>}</p>
<p>int exit()<br>
{<br>
return 0;<br>
}</p>
<p>int main()<br>
{</p>
<pre><code>menu();
if (user_option == 1)
	{
		int i;
		for(i=0; i&lt;50; i++)
		{
		grid();
		playerMove();
		playerMarker++;
		clearScreen();
		}
	}

if (user_option == 2)
{
	highscore();
}

if (user_option == 3)
{
	exit();
}


return 0;
</code></pre>
<p>}</p>
</blockquote>
</aside>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/48">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/48</link>
        <pubDate>Mon, 14 Feb 2011 15:29:49 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-48</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[Paddy]]></dc:creator>
        <description><![CDATA[
            <p>Ok, update, i’ve got the grid working and updating, I’ve yet to implement a high score function, but the thing that is confusing me is how I’m going to detect a winner. Is the best way to do it by checking all cells using a lengthy if statement?</p>
<p>Code so far:</p>
<aside class="quote no-group">
<blockquote>
<p>// ConnectFour.cpp : Defines the entry point for the console application.<br>
//</p>
<p><span class="hashtag">#include</span> “stdafx.h”<br>
<span class="hashtag">#include</span> <br>
<span class="hashtag">#include</span> &lt;stdlib.h&gt;</p>
<p>using namespace std;<br>
int menu();<br>
int grid();<br>
int highscore();<br>
int exit();<br>
int player = 1;<br>
int playGame();<br>
int playerMove();<br>
int columnChosen;<br>
int user_option;</p>
<p>int playerMarker=0;</p>
<p>char columnarray[7][7]={<br>
{’"’,’"’,’"’,’"’,’"’,’"’,’"’},<br>
{’"’,’"’,’"’,’"’,’"’,’"’,’"’},<br>
{’"’,’"’,’"’,’"’,’"’,’"’,’"’},<br>
{’"’,’"’,’"’,’"’,’"’,’"’,’"’},<br>
{’"’,’"’,’"’,’"’,’"’,’"’,’"’},<br>
{’"’,’"’,’"’,’"’,’"’,’"’,’"’},<br>
{’"’,’"’,’"’,’"’,’"’,’"’,’"’}};</p>
<p>void clearScreen()<br>
{<br>
system(“cls”);<br>
}</p>
<p>int menu()<br>
{</p>
<pre><code>cout&lt;&lt;"				Welcome to connectFour!";
cout&lt;&lt;endl;
cout&lt;&lt;endl;
cout&lt;&lt;"This is the main menu! Enter the option of your choice to continue!";
cout&lt;&lt;endl;
cout&lt;&lt;endl;
cout&lt;&lt;"1. Start new game!";
cout&lt;&lt;endl;
cout&lt;&lt;"2. View high scores";
cout&lt;&lt;endl;
cout&lt;&lt;"3. Exit game and return to desktop";
cout&lt;&lt;endl;
cout&lt;&lt;endl;
cout&lt;&lt;"Please enter your choice: ";


cin&gt;&gt;user_option;



return 0;
</code></pre>
<p>}</p>
<p>int grid()</p>
<p>{<br>
clearScreen();<br>
int i;</p>
<pre><code>cout&lt;&lt;"					ConnectFour"&lt;&lt;endl; 
cout&lt;&lt;endl;
for(i=0; i&lt;7; i++)
{
	cout&lt;&lt;"|  "&lt;&lt;columnarray[0][i]&lt;&lt;"   |  "&lt;&lt;columnarray[1][i]&lt;&lt;"   |  "&lt;&lt;columnarray[2][i]&lt;&lt;"   |  "&lt;&lt;columnarray[3][i]&lt;&lt;"   |  "&lt;&lt;columnarray[4][i]&lt;&lt;"   |  "&lt;&lt;columnarray[5][i]&lt;&lt;"   |  "&lt;&lt;columnarray[6][i]&lt;&lt;"   | \n -------------------------------------------------"&lt;&lt;endl;
}
cout&lt;&lt;"|  0   |  1   |  2   |  3   |  4   |  5   |  6   |"&lt;&lt;endl&lt;&lt;endl&lt;&lt;"Player 1 = X  ||  Player 2 = O  ||  Empty Slot = \""&lt;&lt;endl;

return 0;
</code></pre>
<p>}</p>
<p>int playerMove()<br>
{</p>
<pre><code>cout&lt;&lt;"Please choose where you would like to drop your counter. ";

cin&gt;&gt;columnChosen;

if (playerMarker % 2 == 0)
{
	player = 1;
}
else
{
	player = 2;
}

if(columnChosen == 0)
	{
		//Check whether lowest space is free
		if(columnarray[0][6] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[0][6] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[0][6] = 'O';
			}
		}
		
		else if(columnarray[0][5] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[0][5] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[0][5] = 'O';
			}
		}
		else if(columnarray[0][4] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[0][4] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[0][4] = 'O';
			}
		}
		else if(columnarray[0][3] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[0][3] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[0][3] = 'O';
			}
		}
		else if(columnarray[0][2] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[0][2] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[0][2] = 'O';
			}
		}
		else if(columnarray[0][1] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[0][1] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[0][1] = 'O';
			}
		}
		else if(columnarray[0][0] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[0][0] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[0][0] = 'O';
			}
		}
	}
	//COLUMN 1
	else if(columnChosen == 1)
	{
		//Check whether lowest space is free
		if(columnarray[1][6] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[1][6] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[1][6] = 'O';
			}
		}
		else if(columnarray[1][5] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[1][5] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[1][5] = 'O';
			}
		}
		else if(columnarray[1][4] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[1][4] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[1][4] = 'O';
			}
		}
		else if(columnarray[1][3] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[1][3] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[1][3] = 'O';
			}
		}
		else if(columnarray[1][2] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[1][2] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[1][2] = 'O';
			}
		}
		else if(columnarray[1][1] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[1][1] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[1][1] = 'O';
			}
		}
		else if(columnarray[1][0] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[1][0] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[1][0] = 'O';
			}
		}
	}
	else if(columnChosen == 2)
	{
		//Check whether lowest space is free
		if(columnarray[2][6] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[2][6] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[2][6] = 'O';
			}
		}
		else if(columnarray[2][5] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[2][5] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[2][5] = 'O';
			}
		}
		else if(columnarray[2][4] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[2][4] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[2][4] = 'O';
			}
		}
		else if(columnarray[2][3] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[2][3] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[2][3] = 'O';
			}
		}
		else if(columnarray[2][2] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[2][2] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[2][2] = 'O';
			}
		}
		else if(columnarray[2][1] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[2][1] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[2][1] = 'O';
			}
		}
		else if(columnarray[2][0] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[2][0] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[2][0] = 'O';
			}
		}
	}
	else if(columnChosen == 3)
	{
		//Check whether lowest space is free
		if(columnarray[3][6] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[3][6] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[3][6] = 'O';
			}
		}
		else if(columnarray[3][5] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[3][5] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[3][5] = 'O';
			}
		}
		else if(columnarray[3][4] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[3][4] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[3][4] = 'O';
			}
		}
		else if(columnarray[3][3] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[3][3] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[3][3] = 'O';
			}
		}
		else if(columnarray[3][2] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[3][2] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[3][2] = 'O';
			}
		}
		else if(columnarray[3][1] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[3][1] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[3][1] = 'O';
			}
		}
		else if(columnarray[3][0] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[3][0] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[3][0] = 'O';
			}
		}
	}
	else if(columnChosen == 4)
	{
		//Check whether lowest space is free
		if(columnarray[4][6] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[4][6] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[4][6] = 'O';
			}
		}
		else if(columnarray[4][5] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[4][5] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[4][5] = 'O';
			}
		}
		else if(columnarray[4][4] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[4][4] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[4][4] = 'O';
			}
		}
		else if(columnarray[4][3] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[4][3] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[4][3] = 'O';
			}
		}
		else if(columnarray[4][2] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[4][2] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[4][2] = 'O';
			}
		}
		else if(columnarray[4][1] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[4][1] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[4][1] = 'O';
			}
		}
		else if(columnarray[4][0] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[4][0] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[4][0] = 'O';
			}
		}
	}
	else if(columnChosen == 5)
	{
		//Check whether lowest space is free
		if(columnarray[5][6] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[5][6] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[5][6] = 'O';
			}
		}
		else if(columnarray[5][5] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[5][5] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[5][5] = 'O';
			}
		}
		else if(columnarray[5][4] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[5][4] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[5][4] = 'O';
			}
		}
		else if(columnarray[5][3] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[5][3] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[5][3] = 'O';
			}
		}
		else if(columnarray[5][2] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[5][2] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[5][2] = 'O';
			}
		}
		else if(columnarray[5][1] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[5][1] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[5][1] = 'O';
			}
		}
		else if(columnarray[5][0] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[5][0] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[5][0] = 'O';
			}
		}
	}
	else if(columnChosen == 6)
	{
		//Check whether lowest space is free
		if(columnarray[6][6] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[6][6] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[6][6] = 'O';
			}
		}
		else if(columnarray[6][5] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[6][5] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[6][5] = 'O';
			}
		}
		else if(columnarray[6][4] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[6][4] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[6][4] = 'O';
			}
		}
		else if(columnarray[6][3] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[6][3] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[6][3] = 'O';
			}
		}
		else if(columnarray[6][2] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[6][2] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[6][2] = 'O';
			}
		}
		else if(columnarray[6][1] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[6][1] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
					 columnarray[6][1] = 'O';
			}
		}
		else if(columnarray[6][0] == '"')
		{
			//If the player is player 1, drop an X
			if(player == 1) 
			{
				columnarray[6][0] = 'X';
			}
			//If the player is player 2, drop a O
			else if(player == 2)
			{
				 columnarray[6][0] = 'O';
			}
		}
	}
	
	
return 0;
}	
</code></pre>
<p>int highscore()<br>
{<br>
clearScreen();<br>
cout&lt;&lt;"High score information will be displayed here. ";<br>
return 0;<br>
}</p>
<p>int exit()<br>
{<br>
return 0;<br>
}</p>
<p>int main()<br>
{</p>
<pre><code>menu();
if (user_option == 1)
	{
		int i;
		for(i=0; i&lt;50; i++)
		{
		grid();
		playerMove();
		playerMarker++;
		clearScreen();
		}
	}

if (user_option == 2)
{
	highscore();
}

if (user_option == 3)
{
	exit();
}


return 0;
</code></pre>
<p>}</p>
</blockquote>
</aside>
<p>Thanks guys.</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/47">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/47</link>
        <pubDate>Mon, 14 Feb 2011 09:53:14 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-47</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[JamesKane]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="King_Kaddo">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://leakfree.org/letter_avatar_proxy/v4/letter/k/bcef8e/40.png" class="avatar"> King_Kaddo:</div>
<blockquote>
<p>Can anyone here briefly explain: Why C++ and what for?</p>
</blockquote>
</aside>
<p>If you need to work on high performance applications and/or require low level memory management then C++ is the way to go.</p>
<p>If you want to just make a simple application, a tool, or something for most workplaces then Java, .net, python and so are may be better.</p>
<p>Depending on what you need to do determines the language to use.</p>
<p>Also, the reason most CS students are required to learn C++ first is to understand memory management, pointers, and whats under the hood. Those who learn java first tend to be confused when learning such topics afterwords.</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/46">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/46</link>
        <pubDate>Wed, 09 Feb 2011 05:17:15 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-46</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[orange_cat]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="King_Kaddo">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://leakfree.org/letter_avatar_proxy/v4/letter/k/bcef8e/40.png" class="avatar"> King_Kaddo:</div>
<blockquote>
<p>Can anyone here briefly explain: Why C++ and what for?</p>
</blockquote>
</aside>
<aside class="quote no-group" data-username="Burbinator">
<div class="title">
<div class="quote-controls"></div>
 Burbinator:</div>
<blockquote>
<p>because it’s a programming language and for creating programs</p>
</blockquote>
</aside>
<p>King_Kaddo, I think you require more context, other wise you end up with vague answers such as why C++ exists, could you have meant why the OP chose to use C++? (vague answer to that is “This is the C++/Programming thread.”  <img src="https://leakfree.org/images/emoji/twitter/stuck_out_tongue.png?v=9" title=":stuck_out_tongue:" class="emoji" alt=":stuck_out_tongue:"> )</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/45">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/45</link>
        <pubDate>Wed, 09 Feb 2011 00:09:18 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-45</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[King_Kaddo]]></dc:creator>
        <description><![CDATA[
            <p><div class="lightbox-wrapper"><a class="lightbox" href="https://leakfree.org/uploads/default/original/2X/1/1a942107fd31add37ec75ba39983d7c81b8512f7.jpeg" data-download-href="https://leakfree.org/uploads/default/1a942107fd31add37ec75ba39983d7c81b8512f7" title=""><img src="https://leakfree.org/uploads/default/optimized/2X/1/1a942107fd31add37ec75ba39983d7c81b8512f7_2_666x500.jpeg" alt="" data-base62-sha1="3N7MjhKUQtYSKhC7wUvDuP3MPVd" width="666" height="500" srcset="https://leakfree.org/uploads/default/optimized/2X/1/1a942107fd31add37ec75ba39983d7c81b8512f7_2_666x500.jpeg, https://leakfree.org/uploads/default/optimized/2X/1/1a942107fd31add37ec75ba39983d7c81b8512f7_2_999x750.jpeg 1.5x, https://leakfree.org/uploads/default/original/2X/1/1a942107fd31add37ec75ba39983d7c81b8512f7.jpeg 2x" data-small-upload="https://leakfree.org/uploads/default/optimized/2X/1/1a942107fd31add37ec75ba39983d7c81b8512f7_2_10x10.png"><div class="meta"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename"></span><span class="informations">1024×768 149 KB</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg></div></a></div></p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/44">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/44</link>
        <pubDate>Tue, 08 Feb 2011 21:54:02 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-44</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[bur]]></dc:creator>
        <description><![CDATA[
            <p>because it’s a programming language and for creating programs</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/43">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/43</link>
        <pubDate>Tue, 08 Feb 2011 21:50:57 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-43</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[King_Kaddo]]></dc:creator>
        <description><![CDATA[
            <p>Can anyone here briefly explain: Why C++ and what for?</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/42">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/42</link>
        <pubDate>Tue, 08 Feb 2011 19:59:24 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-42</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[mental2k]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="wheybags">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://leakfree.org/letter_avatar_proxy/v4/letter/w/f4b2a3/40.png" class="avatar"> wheybags:</div>
<blockquote>
<p>Yeah, we do assembly too, but it’s kind of annoying that while the engineering students learn to program in C++, pure CS students learn fucking java.</p>
</blockquote>
</aside>
<p>Really? C/C++ is nowhere near as useful as Matlab for most engineers!</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/41">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/41</link>
        <pubDate>Tue, 08 Feb 2011 19:00:33 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-41</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[Samapico]]></dc:creator>
        <description><![CDATA[
            <p>Probably depends what you do with it…</p>
<p>I’d guess there’s much less overhead if you just loop through an array of chars. But if you do a lot of string operations that are supported by the class, you can be pretty sure it will be as optimized as it could be.</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/40">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/40</link>
        <pubDate>Mon, 07 Feb 2011 22:15:01 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-40</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[Solokiller]]></dc:creator>
        <description><![CDATA[
            <p>Which do you think is better in a real-time environment, basic char arrays or string classes?</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/39">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/39</link>
        <pubDate>Mon, 07 Feb 2011 21:07:17 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-39</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[JamesKane]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="saivert">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://leakfree.org/letter_avatar_proxy/v4/letter/s/73ab20/40.png" class="avatar"> saivert:</div>
<blockquote>
<p>requires  <span class="hashtag">#include</span> <br>
What I had to do to get it to build on my Linux box.<br>
Still some issues to iron out before it works perfectly on Linux.<br>
You used too many Microsoft-isms in your code like strcpy_s (secure functions). Why not just use the STL string classes?<br>
This was about learning to code C++, and then it helps to keep it as clean as possible and not use any platform specific extensions to C++ or its standard library.</p>
</blockquote>
</aside>
<p>The projects I work on ( free or contracted ) usually involve windows so it has become a habit to use visual studio C++ code. Also, chars are more fun than std strings.</p>
<p>For linux I’m unsure of a system api call which would allow you to do the same, but you can call the clear command.</p>
<p><code>#include &lt;stdlib.h&gt;
system("clear"); </code></p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/38">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/38</link>
        <pubDate>Mon, 07 Feb 2011 19:56:43 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-38</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[Redtarget]]></dc:creator>
        <description><![CDATA[
            <p>pfft Arrays are SO C</p>
<p>You want Vectors of vectors (for the lols)</p>
<aside class="quote no-group">
<blockquote>
<p>std::vector&lt; Std::vector &gt; (Yummy)</p>
</blockquote>
</aside>
<p>also</p>
<aside class="quote no-group">
<blockquote>
<p>main()<br>
{<br>
TrollFunc();<br>
}</p>
<p>TrollFunc()<br>
{<br>
int* MemLeak = new int;<br>
TrollFunc()<br>
}</p>
</blockquote>
</aside>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/37">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/37</link>
        <pubDate>Mon, 07 Feb 2011 19:47:11 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-37</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[saivert]]></dc:creator>
        <description><![CDATA[
            <p>void ClearScreen()<br>
{<br>
<span class="hashtag">#ifdef</span> _POSIX<br>
std: :s ystem ( “clear” );<br>
<span class="hashtag">#endif</span><br>
<span class="hashtag">#ifdef</span> _WIN32</p>
<pre><code>HANDLE hStdOut = GetStdHandle(STD_OUTPUT_HANDLE);
COORD coord = {0, 0};
DWORD count;

CONSOLE_SCREEN_BUFFER_INFO csbi;
GetConsoleScreenBufferInfo(hStdOut, &amp;csbi);

FillConsoleOutputCharacter(hStdOut, ' ', csbi.dwSize.X * csbi.dwSize.Y, coord, &amp;count);


SetConsoleCursorPosition(hStdOut, coord);
</code></pre>
<p><span class="hashtag">#endif</span><br>
}</p>
<p>requires  <span class="hashtag">#include</span> <br>
What I had to do to get it to build on my Linux box.<br>
Still some issues to iron out before it works perfectly on Linux.<br>
You used too many Microsoft-isms in your code like strcpy_s (secure functions). Why not just use the STL string classes?<br>
This was about learning to code C++, and then it helps to keep it as clean as possible and not use any platform specific extensions to C++ or its standard library.</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/36">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/36</link>
        <pubDate>Mon, 07 Feb 2011 18:07:00 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-36</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[Katana]]></dc:creator>
        <description><![CDATA[
            <p>This essay has some pretty hilarious jokes about people writing bad code, in various languages.</p>
<p><a href="https://mindprod.com/jgloss/unmain.html" data-bbcode="true" rel="nofollow noopener">https://mindprod.com/jgloss/unmain.html</a><br>
Look at 34. under Obfuscation.</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/35">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/35</link>
        <pubDate>Thu, 03 Feb 2011 17:46:03 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-35</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[Solokiller]]></dc:creator>
        <description><![CDATA[
            <p>If C++ were to have more native support for multi-platform code (i.e. no need to worry about different type sizes on different platforms), and weren’t so problematic with all the different types of strings, it would be a much better choice for developing stuff.</p>
<p>Right now, you have to program your own system for managing languages since the standard library isn’t sufficient for that. Some people might consider that good, since the system you make is going to be purpose built for your program, but it’s like reinventing the wheel, in the end, it only wastes time.</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/34">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/34</link>
        <pubDate>Sun, 30 Jan 2011 11:36:51 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-34</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[Katana]]></dc:creator>
        <description><![CDATA[
            <p>You still have to worry about memory management when it’s becoming a problem (ie, you have 300 circular references after you’re program’s been running for a while) The easiness is that you don’t have to think so much about memory until then, and it’s usually somewhat easy to fix.</p>
<p>WARNING: C++ rant ahead!</p>
<p>I’ve been kind of hoping that the industry could start to move away from C++ development. Even after learning programming for 5+ years in school, it baffles me with all its typedefs and macros. Simple things like string conversion take hours of Google research. Honestly, when I’m programming a game I want to get it DONE, not cleanly code out individual H/CPP files and design my own methods for everything. The only problem is, C++ is currently the only way to go for making a native-built, highly efficient program. I kind of wish things would move on to another, simpler language, be it D or even Google’s Go.</p>
<p>You can imagine I drooled when Unity3D said it supported native C# code.</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/33">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/33</link>
        <pubDate>Sat, 29 Jan 2011 23:59:21 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-33</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[Sethis]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="blastedt">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://leakfree.org/letter_avatar_proxy/v4/letter/b/dc4da7/40.png" class="avatar"> blastedt:</div>
<blockquote>
<p>You misunderstood.  In C++ you have to control your memory manually.  Java automatically throws out old variables, etc.  Java code uses as little memory as feasible.</p>
</blockquote>
</aside>
<p>Java doesn’t throw out old variables, only unreferenced ones. That’s why you still have to worry about memory management. If you don’t, you get Minecraft.</p>
<aside class="quote no-group" data-username="blastedt">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://leakfree.org/letter_avatar_proxy/v4/letter/b/dc4da7/40.png" class="avatar"> blastedt:</div>
<blockquote>
<p>With C++, you have to take those precautions and steps manually (garbage collection).<br>
<a href="https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)#Availability" data-bbcode="true" rel="nofollow noopener">https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)#Availability</a></p>
</blockquote>
</aside>
<p>Once again: garbage collection is only a subset of memory management.</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/32">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/32</link>
        <pubDate>Sat, 29 Jan 2011 23:46:22 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-32</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[sersoft]]></dc:creator>
        <description><![CDATA[
            <p>this is my programming keyboard</p>
<p><div class="lightbox-wrapper"><a class="lightbox" href="https://leakfree.org/uploads/default/original/2X/b/bd7784812d647f4a24f68f31cf031a344fe19b23.jpeg" data-download-href="https://leakfree.org/uploads/default/bd7784812d647f4a24f68f31cf031a344fe19b23" title=""><img src="https://leakfree.org/uploads/default/original/2X/b/bd7784812d647f4a24f68f31cf031a344fe19b23.jpeg" alt="" data-base62-sha1="r26j2Or5hfd0u26l6ufriSVSXWb" width="690" height="499" data-small-upload="https://leakfree.org/uploads/default/optimized/2X/b/bd7784812d647f4a24f68f31cf031a344fe19b23_2_10x10.png"><div class="meta"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename"></span><span class="informations">705×510 54.6 KB</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg></div></a></div></p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/31">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/31</link>
        <pubDate>Sat, 29 Jan 2011 18:48:48 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-31</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[blastedt]]></dc:creator>
        <description><![CDATA[
            <p>You misunderstood.  In C++ you have to control your memory manually.  Java automatically throws out old variables, etc.  Java code uses as little memory as feasible.  With C++, you have to take those precautions and steps manually (garbage collection).<br>
<a href="https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)#Availability" data-bbcode="true" rel="nofollow noopener">https://en.wikipedia.org/wiki/Garbage_collection_(computer_science)#Availability</a></p>
<aside class="quote no-group">
<blockquote>
<p>Object-oriented programming languages such as Smalltalk, Java and ECMAScript usually provide integrated garbage collection. Notable exceptions are C++ and Delphi which have destructors.</p>
</blockquote>
</aside>
<p>Even though you can get a null pointer exception in Java, you aren’t actually using pointers.</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/30">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/30</link>
        <pubDate>Sat, 29 Jan 2011 18:33:17 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-30</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[Sethis]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="JamesKane">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://leakfree.org/letter_avatar_proxy/v4/letter/j/838e76/40.png" class="avatar"> JamesKane:</div>
<blockquote>
<p>Except in java you do not have to worry about memory management or pointers.</p>
</blockquote>
</aside>
<p>Except in java you still have null pointer exception, and you have to worry about memory management (Minecraft taking 1gb, srsly, wth?), and of course you cannot use built-in types as template arguments, which sucks big time.</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/29">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/29</link>
        <pubDate>Sat, 29 Jan 2011 17:05:03 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-29</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[JamesKane]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="Plazmatic">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://leakfree.org/letter_avatar_proxy/v4/letter/p/bc8723/40.png" class="avatar"> Plazmatic:</div>
<blockquote>
<p>Not sure why people whine about learning C++ who previously learn’t in java, basic concepts in programming appear to remain the same, just different syntax</p>
</blockquote>
</aside>
<p>Except in java you do not have to worry about memory management or pointers.</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/28">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/28</link>
        <pubDate>Sat, 29 Jan 2011 05:12:50 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-28</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[Plazmatic]]></dc:creator>
        <description><![CDATA[
            <p>Not sure why people whine about learning C++ who previously learn’t in java, basic concepts in programming appear to remain the same, just different syntax</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/27">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/27</link>
        <pubDate>Sat, 29 Jan 2011 04:41:43 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-27</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
      <item>
        <title>C++/Programming thread</title>
        <dc:creator><![CDATA[MtzBraves]]></dc:creator>
        <description><![CDATA[
            <p>I JUST started, so looking at these is hurting my head.</p>
          <p><a href="https://leakfree.org/t/c-programming-thread/6438/26">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/c-programming-thread/6438/26</link>
        <pubDate>Sat, 29 Jan 2011 03:55:45 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-6438-26</guid>
        <source url="https://leakfree.org/t/c-programming-thread/6438.rss">C++/Programming thread</source>
      </item>
  </channel>
</rss>
