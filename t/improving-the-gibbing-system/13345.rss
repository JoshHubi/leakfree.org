<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Improving the gibbing system</title>
    <link>https://leakfree.org/t/improving-the-gibbing-system/13345</link>
    <description>Currently, gibbing is &quot;bits and pieces&quot; or nothing at all. This means that if one has gibbing turned on, a killed enemy&#39;s corpse will be either intact or totally dismembered. Partial gibbing, like the one seen in L4D2, was not done by the devs due to huge amount of work it would require, and the final effect not being worth it.

An idea of two-stage gibbing came to my mind, and it would probably be a fine balance between gameplay value and amount of work needed to put into it (but I&#39;m not sure, I&#39;m neither a Source modder nor computer specialist). If there is a force strong enough to justify gibbing, the enemy would only lose let&#39;s say a head and a right arm, while torso, left arm and legs would remain. If the resulting corpse is hit, it will further dismember into a state that we have in current gibbing system. Correct me if I&#39;m wrong, but this would only need a creation of one more model for each enemy, as opposed to a total of 32 of them if partial gibbing à la L4D2 were to be implemented.

This would have several benefits:


* Gibbing would initially generate less gibs, allowing players with weak PCs to have it enabled. Maybe there would be an option to allow only the first stage of gibbing if someone has good enough PC for it, but not good enough to allow even more gibs from full gibbing.
* Gibbing would be more reasonable and believable, for example it&#39;s quite ridiculous for a .50 cal to explode HECU soldiers with a single bullet. It also works the other way - for example, the tripmine&#39;s explosion at the very beginning of WGH is not strong enough and close enough to gib a scientist, leaving his body intact. This is probably the most blatant example of current gib system&#39;s limitations (I&#39;m not ranting, I like the current gibbing system but this really stood out for me).
* Gibbing could happen more often without worrying about game performance and entity limit, so the first stage of gibbing would require less damage done to the corpse than it currently needs to dismember it wholly. Currently, it happens quite often that you blow an explosive really close to a body, and it&#39;s still intact. But should the &quot;gib sensitivity&quot; be higher, gibbing would probably happen too often, having an impact on game performance due to large number of entities it generates. Two-stage gibbing would rectify this issue.
* The second gibbing stage could be also triggered by normal non-explosive weapons like MP5 and shotgun, since corpses are already badly damaged so they are more prone to damage and it would justify gibbing it more easily (maybe they would even have parts of skin torn out aside from missing a head and an arm to suggest they can be gibbed even further?). It would be fun for players to play with bodies (I know people enjoy this little massacre in a video game like this). This could also help re-introducing shotgun gibbing while keeping shotgun&#39;s devastating capabilities within more reasonable bounds - it&#39;s a bit sad it was cut, it would be really satisfying if it happened randomly from time to time, especially due to it&#39;s wow-factor.


For example, current gibbed houndeye could be considered a first-stage gibbing of this creature, since it actually doesn&#39;t differ much from it&#39;s intact corpse. The second stage could be for example tearing its torso in half and shattering its eye.
Again - I am no modder nor programmer of any sort, I&#39;m just a player and I think this idea was worth sharing. What do you think about it?</description>
    
    <lastBuildDate>Sat, 26 Jul 2014 04:23:15 +0000</lastBuildDate>
    <category>The Cafeteria</category>
    <atom:link href="https://leakfree.org/t/improving-the-gibbing-system/13345.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[coldroll]]></dc:creator>
        <description><![CDATA[
            <p>I always wondered how they where able to do that, and now I know thanks for the extra tidbit of information.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/28">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/28</link>
        <pubDate>Sat, 26 Jul 2014 04:23:15 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-28</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[dky.tehkingd.u]]></dc:creator>
        <description><![CDATA[
            <p>In fact, most of the Infected AI count as a single entity, because they’re all managed by a single “Director” AI rather than acting as individuals. That’s how they were able to get huge swarms of infected in the game at once.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/27">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/27</link>
        <pubDate>Sat, 26 Jul 2014 02:48:51 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-27</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[coldroll]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="Crypt">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://leakfree.org/user_avatar/leakfree.org/crypt/40/4394_2.png" class="avatar"> Crypt:</div>
<blockquote>
<p>Left 4 Dead doesn’t cram as many entities into its maps, so it probably isn’t too hard to avoid reaching them. It’s also a different engine branch, which may or may not have different limits.</p>
</blockquote>
</aside>
<p>Oh I see thanks for answering my question!  <img src="https://leakfree.org/images/emoji/twitter/slight_smile.png?v=9" title=":slight_smile:" class="emoji" alt=":slight_smile:"></p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/26">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/26</link>
        <pubDate>Fri, 25 Jul 2014 19:58:37 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-26</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[Crypt]]></dc:creator>
        <description><![CDATA[
            <p>Left 4 Dead doesn’t cram as many entities into its maps, so it probably isn’t too hard to avoid reaching them. It’s also a different engine branch, which may or may not have different limits.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/25">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/25</link>
        <pubDate>Fri, 25 Jul 2014 12:23:45 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-25</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[coldroll]]></dc:creator>
        <description><![CDATA[
            <p>You’re right it definitely is too much work for too little gain. I have one small question though. What engine does Left 4 Dead 2 use and how did Valve get past the limitation of the gibbing system in Left 4 dead 2?</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/24">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/24</link>
        <pubDate>Fri, 25 Jul 2014 05:49:31 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-24</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[bkdale86]]></dc:creator>
        <description><![CDATA[
            <p>Entity limits can be changed but we are running right at the max for most levels.<br>
Go read the white paper/ GDC presentation on LD2 gib system. We looked at doing it and while really cool would be a lot of work for a small return. It would really only be useful with the zombie SCI. But if you did it for them you would have to do it for all the creatures. Which means you have to build all the subsystems that would show off the innerds when you blast them. That is a lot of work…Then you have to integrate it with our version of the engine. If we had a unlimited budget and lots of extra people…</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/23">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/23</link>
        <pubDate>Fri, 25 Jul 2014 02:07:51 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-23</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[Crypt]]></dc:creator>
        <description><![CDATA[
            <p>Why even Avalanche?</p>
<p>Once again, Source and Avalanche are built for different types of games, and I don’t think we even know the specifics of how Avalanche is built.</p>
<p>Valve is very capable of creating their own engine. Trying to just “merge” another company’s engine wouldn’t just “take time,” it’d just be a friggin’ <span class="bbcode-i">storm</span> of issues, and almost definitely wouldn’t even function.</p>
<p>For now, the devs are just gonna have to deal with the edict limit. They chose the make the mod in Source so they accept Source’s limitations.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/22">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/22</link>
        <pubDate>Thu, 24 Jul 2014 12:39:04 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-22</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[JeffMOD]]></dc:creator>
        <description><![CDATA[
            <p>That’s… not how it works. IP issues aside, you can’t just toss two game engines in a blender and expect anything that works even half-way to come out.<br>
Source is modular, but not THAT modular that you could literally toss out the BSP format like that. Not to mention, even if you could, you’d have to find some way to make the ‘new’ map format use vmts and mdls instead of the current Avalanche file formats, or just toss the current mod tools riiiiight out the window for good, which combined with the loss of Hammer’s interface due to the new map format would of course lead to things like Black Mesa not being made anymore because all the veteran modders would have 0 experience working with the new tools and thus be releasing subpar work until they had time to become more comfortable with the “new” Source engine.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/21">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/21</link>
        <pubDate>Thu, 24 Jul 2014 10:50:56 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-21</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[Cup_o_Joe]]></dc:creator>
        <description><![CDATA[
            <p>Of course it would take time but implementing the API of Avalanche into source would allow Valve to make much larger maps that wouldn’t require loading times.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/20">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/20</link>
        <pubDate>Thu, 24 Jul 2014 05:15:01 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-20</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[coldroll]]></dc:creator>
        <description><![CDATA[
            <p>Yeah merging the engines probably wouldn’t work to well. It would also probably cause more issues than it would solve.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/19">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/19</link>
        <pubDate>Thu, 24 Jul 2014 01:57:29 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-19</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[Crypt]]></dc:creator>
        <description><![CDATA[
            <p>I’m not an expert, but I’m 99% sure that taking two very different engines built for entirely different games and “merging” them isn’t a thing to happen just like that.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/18">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/18</link>
        <pubDate>Wed, 23 Jul 2014 11:03:23 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-18</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[Cup_o_Joe]]></dc:creator>
        <description><![CDATA[
            <p>I reread that page and you’re both right. If only Valve would purchase the Avalanche engine and merge it with Source, then the problem would be solved.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/17">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/17</link>
        <pubDate>Wed, 23 Jul 2014 03:13:16 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-17</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[dky.tehkingd.u]]></dc:creator>
        <description><![CDATA[
            <p>Just because the engine doesn’t render an entity doesn’t mean that entity doesn’t exist. That’s kind of like saying you can win a game of hide and seek by covering your eyes.</p>
<p>The problem is that too many gibs = too many entities IN EXISTENCE, not that there are too many entities being RENDERED.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/16">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/16</link>
        <pubDate>Tue, 22 Jul 2014 22:25:22 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-16</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[Crypt]]></dc:creator>
        <description><![CDATA[
            <p>No. That’s not how that works.</p>
<p>I mean, you’re correct in that areaportals help control what’s being rendered, but it wouldn’t solve the issue of running out of edicts, it’s not that simple. Trust me, the devs have far mastered areaportals, but they’re not a miracle solution by any means.</p>
<p>For example: visleaves already ensure the entire map isn’t rendered at all times. Areaportals aren’t the whole backbone to that or anything. The issue isn’t simply “too much rendered on screen at once.”</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/15">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/15</link>
        <pubDate>Tue, 22 Jul 2014 22:05:23 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-15</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[Cup_o_Joe]]></dc:creator>
        <description><![CDATA[
            <p>I have a simple solution to the entity problem: Area portals. between each area, have an area portal so that the engine only renders what is in that specific room, not the whole map. The engine would only load the entities once the player goes through the area portal.<br>
The area portals would have to be in a blind spot And would be activated when the players steps through the corner or opens the door.</p>
<p><a href="https://developer.valvesoftware.com/wiki/Areaportal" data-bbcode="true" rel="nofollow noopener">Area Portal explanation.</a></p>
<p><img src="https://imagizer.imageshack.us/v2/564x457q90/901/95e5c5.png" alt="" width="" height=""></p>
<p>(the rectangles are entities) The toggle switch turns entities on and off.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/14">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/14</link>
        <pubDate>Tue, 22 Jul 2014 22:04:11 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-14</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[coldroll]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="JeffMOD">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://leakfree.org/user_avatar/leakfree.org/jeffmod/40/4333_2.png" class="avatar"> JeffMOD:</div>
<blockquote>
<p>I don’t think the limbs have to be separate entities, but the game would have to keep track of what limb gets how much damage, as well as spawning a new model to cover up the missing bit with a little gore.</p>
<p>Also I don’t think 2013 can make parts of ragdolls stop colliding like (I think) L4D2 branch can.</p>
<p>I could be wrong. Or maybe the devs have a newer branch than 2013 since they’re getting it directly from Valve. I guess we’ll see whether or not that’s the case on release.</p>
</blockquote>
</aside>
<p>Hopefully Valve is letting them use a newer branch of the engine then.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/13">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/13</link>
        <pubDate>Sat, 19 Jul 2014 22:35:32 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-13</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[JeffMOD]]></dc:creator>
        <description><![CDATA[
            <p>I don’t think the limbs have to be separate entities, but the game would have to keep track of what limb gets how much damage, as well as spawning a new model to cover up the missing bit with a little gore.</p>
<p>Also I don’t think 2013 can make parts of ragdolls stop colliding like (I think) L4D2 branch can.</p>
<p>I could be wrong. Or maybe the devs have a newer branch than 2013 since they’re getting it directly from Valve. I guess we’ll see whether or not that’s the case on release.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/12">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/12</link>
        <pubDate>Sat, 19 Jul 2014 19:35:59 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-12</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[Xeoxer]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username=".RK">
<div class="title">
<div class="quote-controls"></div>
 .RK:</div>
<blockquote>
<p>I remember reading somewhere about TF2’s really neat solution to this problem. What they’d do when a character got beheaded was to 1. spawn the appropriate head gib and 2. shrink the head on the model down to nothing so it’d be like it wasn’t even there. It’s really efficient because it doesn’t require making additional models, rather it’s more a matter of modifying gib behavior.</p>
<p>Take an HECU for example. You gib his arm. If we used TF2’s system, we just spawn an arm gib (which exists already), while on the HECU himself we just shrink everything past the arm to make it appear like he’s been dismembered.</p>
</blockquote>
</aside>
<p>So if the game detects you killed a HECU, and done most of the damage to his arm and head (for example), it spawns arm gib and head gib(s) and shrinks arm and head on the actual ragdoll? That’s really clever, but texture seams on the ragdoll may be a problem (beheaded corpses in TF2 look quite weird with triangle-shaped skin in the place where their head used to be).<br>
But for this to work, doesn’t every limb have to be a separate entity? If so, the idea’s screwed due to entity limit.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/11">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/11</link>
        <pubDate>Sat, 19 Jul 2014 18:48:33 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-11</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[Crypt]]></dc:creator>
        <description><![CDATA[
            <p>Hm, I don’t think that would help the engine running out of edicts (which BM seems to constantly be playing chicken with already).</p>
<aside class="quote no-group" data-username="coldroll">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://leakfree.org/letter_avatar_proxy/v4/letter/c/ba9def/40.png" class="avatar"> coldroll:</div>
<blockquote>
<p>What about the new source 2013 engine? Would it push the engine too much as well? I’m asking since I’m not familiar with the engine since it’s new.</p>
</blockquote>
</aside>
<p>While I can’t speak for commercial Source branch, if I’m not mistaken the 2013 branch is literally just the 2007 branch (the one the current release is on) plus some additional OS support.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/10">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/10</link>
        <pubDate>Sat, 19 Jul 2014 16:33:50 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-10</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[RK1]]></dc:creator>
        <description><![CDATA[
            <p>I remember reading somewhere about TF2’s really neat solution to this problem. What they’d do when a character got beheaded was to 1. spawn the appropriate head gib and 2. shrink the head on the model down to nothing so it’d be like it wasn’t even there. It’s really efficient because it doesn’t require making additional models, rather it’s more a matter of modifying gib behavior.</p>
<p>Take an HECU for example. You gib his arm. If we used TF2’s system, we just spawn an arm gib (which exists already), while on the HECU himself we just shrink everything past the arm to make it appear like he’s been dismembered.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/9">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/9</link>
        <pubDate>Sat, 19 Jul 2014 16:08:00 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-9</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[coldroll]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="danielsangeo">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://leakfree.org/user_avatar/leakfree.org/danielsangeo/40/4347_2.png" class="avatar"> danielsangeo:</div>
<blockquote>
<p>The biggest problem here is that, as far as I can tell, they’re already pushing the limits with regards to entity count in a map.  Spawning additional entities in the form of increased number of gibs might cause the engine (and therefore the game) to crash.</p>
</blockquote>
</aside>
<p>What about the new source 2013 engine? Would it push the engine too much as well? I’m asking since I’m not familiar with the engine since it’s new.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/8">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/8</link>
        <pubDate>Sat, 19 Jul 2014 05:35:12 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-8</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[Toxyn]]></dc:creator>
        <description><![CDATA[
            <p>so does anyone know for sure, if they could possibly implement such a gibbing system with a few lines of code or will it take a dozen seperate models?</p>
<p>I myself would actually like to pop a scientist in the head with a shotty and watch the head turn to jelly. That’d be nice.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/7">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/7</link>
        <pubDate>Sat, 12 Jul 2014 18:53:32 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-7</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[Xeoxer]]></dc:creator>
        <description><![CDATA[
            <aside class="quote no-group" data-username="danielsangeo">
<div class="title">
<div class="quote-controls"></div>
<img alt="" width="20" height="20" src="https://leakfree.org/user_avatar/leakfree.org/danielsangeo/40/4347_2.png" class="avatar"> danielsangeo:</div>
<blockquote>
<p>The biggest problem here is that, as far as I can tell, they’re already pushing the limits with regards to entity count in a map.  Spawning additional entities in the form of increased number of gibs might cause the engine (and therefore the game) to crash.</p>
</blockquote>
</aside>
<p>But there would be LESS of them. For example if you gib a scientist, you’ll get torso with legs and one arm and head, dismembered arm, and head parts (eye, brain etc.) - so 3 less entites because most limbs are still attached. And that would be the only option of gibbing a scientist - no other partially dismembered models of him would exist.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/6">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/6</link>
        <pubDate>Sat, 12 Jul 2014 17:21:38 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-6</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[danielsangeo]]></dc:creator>
        <description><![CDATA[
            <p>The biggest problem here is that, as far as I can tell, they’re already pushing the limits with regards to entity count in a map.  Spawning additional entities in the form of increased number of gibs might cause the engine (and therefore the game) to crash.</p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/5">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/5</link>
        <pubDate>Sat, 12 Jul 2014 12:21:27 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-5</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
      <item>
        <title>Improving the gibbing system</title>
        <dc:creator><![CDATA[dky.tehkingd.u]]></dc:creator>
        <description><![CDATA[
            <p>Ah. Still requires at least a few extra models. Knowing the BM team though, they’d probably want to avoid that kind of work.  <img src="https://leakfree.org/images/emoji/twitter/frowning.png?v=9" title=":frowning:" class="emoji" alt=":frowning:"></p>
          <p><a href="https://leakfree.org/t/improving-the-gibbing-system/13345/4">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/improving-the-gibbing-system/13345/4</link>
        <pubDate>Sat, 12 Jul 2014 02:58:10 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-13345-4</guid>
        <source url="https://leakfree.org/t/improving-the-gibbing-system/13345.rss">Improving the gibbing system</source>
      </item>
  </channel>
</rss>
