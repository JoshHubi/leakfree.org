<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/">
  <channel>
    <title>Texture Lights and Bounce lighting in VRAD</title>
    <link>https://leakfree.org/t/texture-lights-and-bounce-lighting-in-vrad/14676</link>
    <description>This post is to describe the new commands added to Vrad, for your mapping pleasure. This is not intended to be a technical document, as I will be simplifying how vrad works. But, this should give you an idea of what is going on.
These options only effect the baked lightmap generated by vrad, they will not effect impact in-game performance.

[code] -choptexlights: Enables chopping of texture lights. Control texture light quality with lightmap density in hammer.
  Dramatically increases both texture light quality and render time.
 -extratransfers: Enable overscaling of light transfers
 -transferscale:: default 1.0 ; This is the scale factor of light transfers. increased values make surfaces transfer extra light
  (a scale of 2.0-4.0 suggested)
 -satthresh: Default 0.4 ; This is the threshold that checks how saturated a material color is. Used with -satthreshscale:
 -satthreshscale: Default 3.0 ; The amount to scale light transfers from surfaces that pass the saturation threshold[/code][b]-choptexlights (False by default)[/size][/b]
[b][/size][/b]
[b]Vrad &quot;chops&quot; the bsp surfaces into &quot;patches&quot; that get the calculated lighting. the patches act as the pixels of the light map so to speak. Vrad chops up surfaces according to the lightmap size, set in hammer. [b]vrad takes the light brightness values from each patch, and raytraces that data to every other patch in a large huge matrix; also using fancy physics based falloff calculations. [/b][b]When texture lights are used, these patches are set to be bright, and give off light.[/b] [/b]

[b]By default, vrad is set to ignore the chopping of surfaces that have flagged unlit materials. It is set this way to save compile time, because surfaces that don&#39;t receive lighting ( such as nodraw and water, etc.) don&#39;t need to have detailed lightmaps.[/b]

[b]The problem with this, is that if you use texture lights, the texture light material will not be chopped, and you get something like this:[/b]

[b]![vrad_test0013.jpg|690x500](upload://7ZKilh36WrLzEHeLKWQEHlR4FS7.jpeg)[/b]


[b]Exciting blobs of light coming from patches that are too big![/b]


[b]So to fix this, [/b]

[b]1. Add a small lightmap value to your texture lights.[/b]
[b]2. compile with -choptexlights to true.[/b]

[b]and you will get something like this:[/b]

[b]![vrad_test0011.jpg|690x500](upload://x8QsO8O21LjaxW4pk95MwV29N7y.jpeg)[/b]

[b]A few notes:[/b]

[b]1. be careful with the lightmap size, it&#39;s like adding thousands of point lights[/b]. If your area light right next to a wall, like above, then use smaller light maps, but if it is far away, small lightmaps are not needed.
2. It is possible, for example, to have a modelled light fixture (neon signs, etc. ) use a texture light:
![vrad_test0000.jpg|690x500](upload://yVet49EDqn9BLWZmBZQG82cfxcg.jpeg)
Now you can have your &quot;Eat-at-Joe&#39;s&quot; sign light up more realistically in source.


[/size]
[b]-extratransfers (default set to false)[/size][/b]
[b]-transferscale: Default 1.0[/size][/b]

As described above, patches give light to other patches. So this option lets you set a multiplier for how much light gets transferred. This can be used to uniformly scale up the lighting in a dark map for example. It is especially good for maps that rely heavily on natural light for indoor lighting.
To use this, set -extratransfers to true and give a value (other than 1) to -transferscale.

value of 1:
[b]![vrad_test0015.jpg|690x500](upload://nn9Y6fHVuxeglbFtZoPWZYLLlu9.jpeg)[/b]

[/size]higher values:
![lightmaps.jpg|690x500](upload://nTZq8FZqA9Fl7KBmTXh8UfnR76w.jpeg)![cornet_dm10006.jpg|690x500](upload://afRmFmlpD3Y66R1tVzhjXLEAqh4.jpeg)




[b] -satthresh: Default 0.4 ;[/b]
[b] -satthreshscale: Default 3.0[/b][/size]

This, when used with the above command, lets you choose only saturated textures to apply extra light transfers to.

-satthresh is a value from 0.0 to 1.0 that represents the &quot;saturation&quot; value in a HSV calculation derived from the material color.
setting this to 0.0 will exaggerate all materials, while a value of 0.5 will exaggerate only materials with a saturation of 0.5 or higher.

-satthreshscale is the multiplication factor of the desired saturated material.


![vrad_test0001.jpg|690x500](upload://ybXKfswPEb25RQXJKug3eGaTWLc.jpeg)![cornet_dm10005.jpg|690x500](upload://oZqZRw7X8GdvVCwQs1xv98O04a7.jpeg)

The red textures are transferring way more light and color to the surrounding textures, while the bland textures on the right are mostly unaffected.

This could be used to get a &quot;mirror&#39;s edge&quot; type of effect, to  exaggerate red painted objectives for example.



That&#39;s all folks, let me know if you need any clarification!</description>
    
    <lastBuildDate>Wed, 10 Feb 2016 13:54:42 +0000</lastBuildDate>
    <category>Developer Logs</category>
    <atom:link href="https://leakfree.org/t/texture-lights-and-bounce-lighting-in-vrad/14676.rss" rel="self" type="application/rss+xml" />
      <item>
        <title>Texture Lights and Bounce lighting in VRAD</title>
        <dc:creator><![CDATA[JeffMOD]]></dc:creator>
        <description><![CDATA[
            <p>Awwww yeah, bringing textlights back!<br>
Party like it’s… <span class="bbcode-i">[looks it up]</span> 2014, according to the last community-made goldsource RAD release.<br>
Either way, more saturated radiosity and making texlights viable again is super great as far as I’m concerned. Those were my biggest complaints about VRAD in source.</p>
          <p><a href="https://leakfree.org/t/texture-lights-and-bounce-lighting-in-vrad/14676/3">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/texture-lights-and-bounce-lighting-in-vrad/14676/3</link>
        <pubDate>Wed, 10 Feb 2016 13:54:42 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-14676-3</guid>
        <source url="https://leakfree.org/t/texture-lights-and-bounce-lighting-in-vrad/14676.rss">Texture Lights and Bounce lighting in VRAD</source>
      </item>
      <item>
        <title>Texture Lights and Bounce lighting in VRAD</title>
        <dc:creator><![CDATA[Crypt]]></dc:creator>
        <description><![CDATA[
            <p>Oh my god, now I can blow up maps with radiosity all I want?! This is <span class="bbcode-i">waaaay</span> better than tweaking VMT values.</p>
<p>Also, texlights on models! That’s like, half of my (reasonable) vrad wishlist.</p>
          <p><a href="https://leakfree.org/t/texture-lights-and-bounce-lighting-in-vrad/14676/2">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/texture-lights-and-bounce-lighting-in-vrad/14676/2</link>
        <pubDate>Wed, 10 Feb 2016 08:56:43 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-14676-2</guid>
        <source url="https://leakfree.org/t/texture-lights-and-bounce-lighting-in-vrad/14676.rss">Texture Lights and Bounce lighting in VRAD</source>
      </item>
      <item>
        <title>Texture Lights and Bounce lighting in VRAD</title>
        <dc:creator><![CDATA[CornetTheory]]></dc:creator>
        <description><![CDATA[
            <p>This post is to describe the new commands added to Vrad, for your mapping pleasure. This is not intended to be a technical document, as I will be simplifying how vrad works. But, this should give you an idea of what is going on.<br>
These options only effect the baked lightmap generated by vrad, they will not effect impact in-game performance.</p>
<p><code> -choptexlights: Enables chopping of texture lights. Control texture light quality with lightmap density in hammer.
  Dramatically increases both texture light quality and render time.
 -extratransfers: Enable overscaling of light transfers
 -transferscale:: default 1.0 ; This is the scale factor of light transfers. increased values make surfaces transfer extra light
  (a scale of 2.0-4.0 suggested)
 -satthresh: Default 0.4 ; This is the threshold that checks how saturated a material color is. Used with -satthreshscale:
 -satthreshscale: Default 3.0 ; The amount to scale light transfers from surfaces that pass the saturation threshold</code><span class="bbcode-b">-choptexlights (False by default)[/size]</span><br>
<span class="bbcode-b">[/size]</span><br>
<span class="bbcode-b">Vrad “chops” the bsp surfaces into “patches” that get the calculated lighting. the patches act as the pixels of the light map so to speak. Vrad chops up surfaces according to the lightmap size, set in hammer. <span class="bbcode-b">vrad takes the light brightness values from each patch, and raytraces that data to every other patch in a large huge matrix; also using fancy physics based falloff calculations. </span><span class="bbcode-b">When texture lights are used, these patches are set to be bright, and give off light.</span> </span></p>
<p><span class="bbcode-b">By default, vrad is set to ignore the chopping of surfaces that have flagged unlit materials. It is set this way to save compile time, because surfaces that don’t receive lighting ( such as nodraw and water, etc.) don’t need to have detailed lightmaps.</span></p>
<p><span class="bbcode-b">The problem with this, is that if you use texture lights, the texture light material will not be chopped, and you get something like this:</span></p>
<p><span class="bbcode-b"><div class="lightbox-wrapper"><a class="lightbox" href="https://leakfree.org/uploads/default/original/2X/3/380a0fd864e47c29918dbd17c3a425844b93640f.jpeg" data-download-href="https://leakfree.org/uploads/default/380a0fd864e47c29918dbd17c3a425844b93640f" title="vrad_test0013.jpg"><img src="https://leakfree.org/uploads/default/optimized/2X/3/380a0fd864e47c29918dbd17c3a425844b93640f_2_690x500.jpeg" alt="vrad_test0013.jpg" data-base62-sha1="7ZKilh36WrLzEHeLKWQEHlR4FS7" width="690" height="500" srcset="https://leakfree.org/uploads/default/optimized/2X/3/380a0fd864e47c29918dbd17c3a425844b93640f_2_690x500.jpeg, https://leakfree.org/uploads/default/optimized/2X/3/380a0fd864e47c29918dbd17c3a425844b93640f_2_1035x750.jpeg 1.5x, https://leakfree.org/uploads/default/optimized/2X/3/380a0fd864e47c29918dbd17c3a425844b93640f_2_1380x1000.jpeg 2x" data-small-upload="https://leakfree.org/uploads/default/optimized/2X/3/380a0fd864e47c29918dbd17c3a425844b93640f_2_10x10.png"><div class="meta"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">vrad_test0013.jpg</span><span class="informations">1680×1050 115 KB</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg></div></a></div></span></p>
<p><span class="bbcode-b">Exciting blobs of light coming from patches that are too big!</span></p>
<p><span class="bbcode-b">So to fix this, </span></p>
<p><span class="bbcode-b">1. Add a small lightmap value to your texture lights.</span><br>
<span class="bbcode-b">2. compile with -choptexlights to true.</span></p>
<p><span class="bbcode-b">and you will get something like this:</span></p>
<p><span class="bbcode-b"><div class="lightbox-wrapper"><a class="lightbox" href="https://leakfree.org/uploads/default/original/2X/e/e847bc287aa52d79b92905a6cd9848543a07e450.jpeg" data-download-href="https://leakfree.org/uploads/default/e847bc287aa52d79b92905a6cd9848543a07e450" title="vrad_test0011.jpg"><img src="https://leakfree.org/uploads/default/optimized/2X/e/e847bc287aa52d79b92905a6cd9848543a07e450_2_690x500.jpeg" alt="vrad_test0011.jpg" data-base62-sha1="x8QsO8O21LjaxW4pk95MwV29N7y" width="690" height="500" srcset="https://leakfree.org/uploads/default/optimized/2X/e/e847bc287aa52d79b92905a6cd9848543a07e450_2_690x500.jpeg, https://leakfree.org/uploads/default/optimized/2X/e/e847bc287aa52d79b92905a6cd9848543a07e450_2_1035x750.jpeg 1.5x, https://leakfree.org/uploads/default/optimized/2X/e/e847bc287aa52d79b92905a6cd9848543a07e450_2_1380x1000.jpeg 2x" data-small-upload="https://leakfree.org/uploads/default/optimized/2X/e/e847bc287aa52d79b92905a6cd9848543a07e450_2_10x10.png"><div class="meta"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">vrad_test0011.jpg</span><span class="informations">1680×1050 235 KB</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg></div></a></div></span></p>
<p><span class="bbcode-b">A few notes:</span></p>
<p><span class="bbcode-b">1. be careful with the lightmap size, it’s like adding thousands of point lights</span>. If your area light right next to a wall, like above, then use smaller light maps, but if it is far away, small lightmaps are not needed.<br>
2. It is possible, for example, to have a modelled light fixture (neon signs, etc. ) use a texture light:<br>
<div class="lightbox-wrapper"><a class="lightbox" href="https://leakfree.org/uploads/default/original/2X/f/f4c22696a268c14c4863179d125b8e5c89f3c284.jpeg" data-download-href="https://leakfree.org/uploads/default/f4c22696a268c14c4863179d125b8e5c89f3c284" title="vrad_test0000.jpg"><img src="https://leakfree.org/uploads/default/optimized/2X/f/f4c22696a268c14c4863179d125b8e5c89f3c284_2_690x500.jpeg" alt="vrad_test0000.jpg" data-base62-sha1="yVet49EDqn9BLWZmBZQG82cfxcg" width="690" height="500" srcset="https://leakfree.org/uploads/default/optimized/2X/f/f4c22696a268c14c4863179d125b8e5c89f3c284_2_690x500.jpeg, https://leakfree.org/uploads/default/optimized/2X/f/f4c22696a268c14c4863179d125b8e5c89f3c284_2_1035x750.jpeg 1.5x, https://leakfree.org/uploads/default/optimized/2X/f/f4c22696a268c14c4863179d125b8e5c89f3c284_2_1380x1000.jpeg 2x" data-small-upload="https://leakfree.org/uploads/default/optimized/2X/f/f4c22696a268c14c4863179d125b8e5c89f3c284_2_10x10.png"><div class="meta"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">vrad_test0000.jpg</span><span class="informations">1680×1050 257 KB</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg></div></a></div><br>
Now you can have your “Eat-at-Joe’s” sign light up more realistically in source.</p>
<p>[/size]<br>
<span class="bbcode-b">-extratransfers (default set to false)[/size]</span><br>
<span class="bbcode-b">-transferscale: Default 1.0[/size]</span></p>
<p>As described above, patches give light to other patches. So this option lets you set a multiplier for how much light gets transferred. This can be used to uniformly scale up the lighting in a dark map for example. It is especially good for maps that rely heavily on natural light for indoor lighting.<br>
To use this, set -extratransfers to true and give a value (other than 1) to -transferscale.</p>
<p>value of 1:<br>
<span class="bbcode-b"><div class="lightbox-wrapper"><a class="lightbox" href="https://leakfree.org/uploads/default/original/2X/a/a3d03c30c758ed37304de05331aa0cebecd642d9.jpeg" data-download-href="https://leakfree.org/uploads/default/a3d03c30c758ed37304de05331aa0cebecd642d9" title="vrad_test0015.jpg"><img src="https://leakfree.org/uploads/default/optimized/2X/a/a3d03c30c758ed37304de05331aa0cebecd642d9_2_690x500.jpeg" alt="vrad_test0015.jpg" data-base62-sha1="nn9Y6fHVuxeglbFtZoPWZYLLlu9" width="690" height="500" srcset="https://leakfree.org/uploads/default/optimized/2X/a/a3d03c30c758ed37304de05331aa0cebecd642d9_2_690x500.jpeg, https://leakfree.org/uploads/default/optimized/2X/a/a3d03c30c758ed37304de05331aa0cebecd642d9_2_1035x750.jpeg 1.5x, https://leakfree.org/uploads/default/optimized/2X/a/a3d03c30c758ed37304de05331aa0cebecd642d9_2_1380x1000.jpeg 2x" data-small-upload="https://leakfree.org/uploads/default/optimized/2X/a/a3d03c30c758ed37304de05331aa0cebecd642d9_2_10x10.png"><div class="meta"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">vrad_test0015.jpg</span><span class="informations">1680×1050 173 KB</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg></div></a></div></span></p>
<p>[/size]higher values:<br>
<div class="lightbox-wrapper"><a class="lightbox" href="https://leakfree.org/uploads/default/original/2X/a/a786468ab1621c7b5e5da093f35bb71817977c98.jpeg" data-download-href="https://leakfree.org/uploads/default/a786468ab1621c7b5e5da093f35bb71817977c98" title="lightmaps.jpg"><img src="https://leakfree.org/uploads/default/optimized/2X/a/a786468ab1621c7b5e5da093f35bb71817977c98_2_690x500.jpeg" alt="lightmaps.jpg" data-base62-sha1="nTZq8FZqA9Fl7KBmTXh8UfnR76w" width="690" height="500" srcset="https://leakfree.org/uploads/default/optimized/2X/a/a786468ab1621c7b5e5da093f35bb71817977c98_2_690x500.jpeg, https://leakfree.org/uploads/default/optimized/2X/a/a786468ab1621c7b5e5da093f35bb71817977c98_2_1035x750.jpeg 1.5x, https://leakfree.org/uploads/default/optimized/2X/a/a786468ab1621c7b5e5da093f35bb71817977c98_2_1380x1000.jpeg 2x" data-small-upload="https://leakfree.org/uploads/default/optimized/2X/a/a786468ab1621c7b5e5da093f35bb71817977c98_2_10x10.png"><div class="meta"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">lightmaps.jpg</span><span class="informations">2214×1264 926 KB</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg></div></a></div><div class="lightbox-wrapper"><a class="lightbox" href="https://leakfree.org/uploads/default/original/2X/4/47e0b8e54447d1a46a9ce03a1276d0c415699a4a.jpeg" data-download-href="https://leakfree.org/uploads/default/47e0b8e54447d1a46a9ce03a1276d0c415699a4a" title="cornet_dm10006.jpg"><img src="https://leakfree.org/uploads/default/optimized/2X/4/47e0b8e54447d1a46a9ce03a1276d0c415699a4a_2_690x500.jpeg" alt="cornet_dm10006.jpg" data-base62-sha1="afRmFmlpD3Y66R1tVzhjXLEAqh4" width="690" height="500" srcset="https://leakfree.org/uploads/default/optimized/2X/4/47e0b8e54447d1a46a9ce03a1276d0c415699a4a_2_690x500.jpeg, https://leakfree.org/uploads/default/optimized/2X/4/47e0b8e54447d1a46a9ce03a1276d0c415699a4a_2_1035x750.jpeg 1.5x, https://leakfree.org/uploads/default/optimized/2X/4/47e0b8e54447d1a46a9ce03a1276d0c415699a4a_2_1380x1000.jpeg 2x" data-small-upload="https://leakfree.org/uploads/default/optimized/2X/4/47e0b8e54447d1a46a9ce03a1276d0c415699a4a_2_10x10.png"><div class="meta"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">cornet_dm10006.jpg</span><span class="informations">1680×1050 125 KB</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg></div></a></div></p>
<p><span class="bbcode-b"> -satthresh: Default 0.4 ;</span><br>
<span class="bbcode-b"> -satthreshscale: Default 3.0</span>[/size]</p>
<p>This, when used with the above command, lets you choose only saturated textures to apply extra light transfers to.</p>
<p>-satthresh is a value from 0.0 to 1.0 that represents the “saturation” value in a HSV calculation derived from the material color.<br>
setting this to 0.0 will exaggerate all materials, while a value of 0.5 will exaggerate only materials with a saturation of 0.5 or higher.</p>
<p>-satthreshscale is the multiplication factor of the desired saturated material.</p>
<p><div class="lightbox-wrapper"><a class="lightbox" href="https://leakfree.org/uploads/default/original/2X/e/efa41f528a41000431889aa5013d6ac5991daefe.jpeg" data-download-href="https://leakfree.org/uploads/default/efa41f528a41000431889aa5013d6ac5991daefe" title="vrad_test0001.jpg"><img src="https://leakfree.org/uploads/default/optimized/2X/e/efa41f528a41000431889aa5013d6ac5991daefe_2_690x500.jpeg" alt="vrad_test0001.jpg" data-base62-sha1="ybXKfswPEb25RQXJKug3eGaTWLc" width="690" height="500" srcset="https://leakfree.org/uploads/default/optimized/2X/e/efa41f528a41000431889aa5013d6ac5991daefe_2_690x500.jpeg, https://leakfree.org/uploads/default/optimized/2X/e/efa41f528a41000431889aa5013d6ac5991daefe_2_1035x750.jpeg 1.5x, https://leakfree.org/uploads/default/optimized/2X/e/efa41f528a41000431889aa5013d6ac5991daefe_2_1380x1000.jpeg 2x" data-small-upload="https://leakfree.org/uploads/default/optimized/2X/e/efa41f528a41000431889aa5013d6ac5991daefe_2_10x10.png"><div class="meta"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">vrad_test0001.jpg</span><span class="informations">1680×1050 216 KB</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg></div></a></div><div class="lightbox-wrapper"><a class="lightbox" href="https://leakfree.org/uploads/default/original/2X/a/af2603166c94c6cc5f11aec27989538b8fc45263.jpeg" data-download-href="https://leakfree.org/uploads/default/af2603166c94c6cc5f11aec27989538b8fc45263" title="cornet_dm10005.jpg"><img src="https://leakfree.org/uploads/default/optimized/2X/a/af2603166c94c6cc5f11aec27989538b8fc45263_2_690x500.jpeg" alt="cornet_dm10005.jpg" data-base62-sha1="oZqZRw7X8GdvVCwQs1xv98O04a7" width="690" height="500" srcset="https://leakfree.org/uploads/default/optimized/2X/a/af2603166c94c6cc5f11aec27989538b8fc45263_2_690x500.jpeg, https://leakfree.org/uploads/default/optimized/2X/a/af2603166c94c6cc5f11aec27989538b8fc45263_2_1035x750.jpeg 1.5x, https://leakfree.org/uploads/default/optimized/2X/a/af2603166c94c6cc5f11aec27989538b8fc45263_2_1380x1000.jpeg 2x" data-small-upload="https://leakfree.org/uploads/default/optimized/2X/a/af2603166c94c6cc5f11aec27989538b8fc45263_2_10x10.png"><div class="meta"><svg class="fa d-icon d-icon-far-image svg-icon" aria-hidden="true"><use xlink:href="#far-image"></use></svg><span class="filename">cornet_dm10005.jpg</span><span class="informations">1680×1050 298 KB</span><svg class="fa d-icon d-icon-discourse-expand svg-icon" aria-hidden="true"><use xlink:href="#discourse-expand"></use></svg></div></a></div></p>
<p>The red textures are transferring way more light and color to the surrounding textures, while the bland textures on the right are mostly unaffected.</p>
<p>This could be used to get a “mirror’s edge” type of effect, to  exaggerate red painted objectives for example.</p>
<p>That’s all folks, let me know if you need any clarification!</p>
          <p><a href="https://leakfree.org/t/texture-lights-and-bounce-lighting-in-vrad/14676/1">Read full topic</a></p>
        ]]></description>
        <link>https://leakfree.org/t/texture-lights-and-bounce-lighting-in-vrad/14676/1</link>
        <pubDate>Wed, 10 Feb 2016 08:45:53 +0000</pubDate>
        <guid isPermaLink="false">leakfree.org-post-14676-1</guid>
        <source url="https://leakfree.org/t/texture-lights-and-bounce-lighting-in-vrad/14676.rss">Texture Lights and Bounce lighting in VRAD</source>
      </item>
  </channel>
</rss>
